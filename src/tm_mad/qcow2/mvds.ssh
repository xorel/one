#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2019, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# mvds host:remote_system_ds/disk.i fe:SOURCE vmid dsid
#   - fe is the front-end hostname
#   - SOURCE is the path of the disk image in the form DS_BASE_PATH/disk
#   - host is the target host to deploy the VM
#   - remote_system_ds is the path for the system datastore in the host
#   - vmid is the id of the VM
#   - dsid is the target datastore (0 is the system datastore)

SRC=$1   # centos7-ev-kvm-qcow2-ssh-5-9-90-1713f-2.test:/var/lib/one//datastores/100/43/disk.0
DST=$2   # /var/lib/one//datastores/1/ae14da5ae23e72782e1295fede30311f

VMID=$3  # 43
DSID=$4  # 1

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

DRIVER_PATH=$(dirname $0)
QCOW2_UTILS=${DRIVER_PATH}/../../datastore/qcow2/qcow2_utils.sh

. $TMCOMMON
. $QCOW2_UTILS

#-------------------------------------------------------------------------------
# Set dst path and dir
#-------------------------------------------------------------------------------

SRC_HOST=`arg_host $SRC`
SRC_PATH=`arg_path $SRC`
SRC_SNAP_DIR=${SRC_PATH}.snap

DST_PATH="$DST"
DST_FILE=`basename $DST`
DST_SNAP_DIR=${DST_PATH}.snap
DST_DIR=`dirname $DST_PATH`

#-------------------------------------------------------------------------------
# Move the image back to the datastore
#-------------------------------------------------------------------------------

log "Moving $SRC to datastore as $DST"

RM_CMD=$(cat <<EOT
  rm -rf ${SRC_SNAP_DIR}
  rm -rf ${SRC_PATH}
EOT
)

set -ex -o pipefail
rm -rf ${DST_SNAP_DIR}
mkdir -p ${DST_SNAP_DIR}

$RSYNC -a --no-links -e ssh ${SRC_HOST}:${SRC_SNAP_DIR}/[0-9]* ${DST_SNAP_DIR}
cd "${DST_SNAP_DIR}"
ln -sf "." "${DST_FILE}.snap"

rebase_backing_files "$DST_FILE"

SNAP="\$(ls | grep '^[[:digit:]]*$' | sort -n | tail -n 1 || :)"
cd ..
rm "${DST_FILE}"
ln -sf "${DST_FILE}.snap/\$SNAP" "${DST_FILE}"


ssh_exec_and_log "$SRC_HOST" "$RM_CMD" "Error deleting disk ${SRC_PATH} on $SRC_HOST"

exit 0
